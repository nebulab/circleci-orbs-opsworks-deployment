executor: default

parameters:
  app_id:
    type: string
    description: The ID of the OpsWorks app to deploy.
  stack_id:
    type: string
    description: The ID of the OpsWorks stack to deploy.
  github_repo:
    type: string
    description: The path of your GitHub repo (org/name).
  slack_hook_url:
    type: string
    description: The URL of the Slack hook to notify.

steps:
  - checkout
  - run:
      name: Install awscli
      command: pip install awscli --user
  - deploy:
      name: Deploy to Production
      command: |
        ~/.local/bin/aws opsworks update-app --app-id <<parameters.app_id>> --app-source Revision=$CIRCLE_SHA1
        ~/.local/bin/aws opsworks wait deployment-successful --deployment-ids `~/.local/bin/aws opsworks create-deployment --stack-id <<parameters.stack_id>> --app-id <<parameters.app_id>> --command "{\"Name\":\"deploy\"}" | awk '{print $2}' | sed 's/"//g'`
  - run:
      name: Remember Last Deploy Ref
      command: |
        echo $CIRCLE_SHA1 > .last_deploy
        chmod 777 .last_deploy
  - save_cache:
      key: last-head-v2-{{ epoch }}
      paths: .last_deploy
  - run:
      name: Notify Successful Production Deploy
      command: |
        cat \<<- EOF > notification.json
          {
            "attachments": [{
              "title": "Deploy",
              "color": "good",
              "text": "<https://github.com/<<parameters.github_repo>>/commit/$CIRCLE_SHA1|`echo $CIRCLE_SHA1 | cut -c1-8`> has been deployed to *production*!"
            }]
          }
        EOF
        curl -X POST -H 'Content-type: application/json' --data '@notification.json' <<parameters.slack_hook_url>>
      when: on_success
  - run:
      name: Notify Failed Production Deploy
      command: |
        cat \<<- EOF > notification.json
          {
            "attachments": [{
              "title": "Deploy",
              "color": "danger",
              "text": "<https://github.com/<<parameters.github_repo>>/commit/$CIRCLE_SHA1|`echo $CIRCLE_SHA1 | cut -c1-8`> failed being deployed to *production*!"
            }]
          }
        EOF
        curl -X POST -H 'Content-type: application/json' --data '@notification.json' <<parameters.slack_hook_url>>
      when: on_fail
